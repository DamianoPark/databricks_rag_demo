---
description: 기능 요건이 잘 충족되는지 확인 필요
alwaysApply: false
---
### 2.2 세션 및 히스토리 관리
- 사용자가 웹앱에 접속 시 세션 ID 생성
- 세션 단위로 대화 히스토리 유지
- 동일 세션 내에서는 이전 대화 맥락을 포함하여 질의 처리
- “새 세션 시작” 버튼으로 초기화 가능

---

### 2.3 에이전트 연결 및 RAG 처리
- Flask 서버 → Databricks Agent REST API 호출
- 입력값:
  - query: 사용자 질문
  - history: 세션 히스토리
  - uploaded_files: 세션 내 업로드 파일 목록
- 에이전트는 Vector Search 인덱스를 조회해 문서 검색 후 LLM 응답 생성
- 응답 구조 예시:

```json
{
  "answer": "문서 기반 응답 텍스트",
  "citations": [
    {
      "title": "복리후생 안내서.pdf",
      "volume_path": "/Volumes/koreanair_corp/docs/guide/복리후생_안내서.pdf"
    }
  ]
}
```

---

### 2.4 파일 업로드 기능
- UI에서 파일 추가 버튼으로 업로드 가능
- 업로드된 파일은 Unity Catalog Volume에 저장

``` 
/Volumes/<catalog>/<schema>/<volume>/uploads/<session_id>/<original_filename>
```

- 허용 확장자 및 최대 파일 크기 제한 설정
- 업로드된 파일은 해당 세션의 RAG 질의 시 참고 가능

---

## 3. 설정값 (Configurable Parameters)

| 항목                  | 설명                     | 예시                                                                 |
|---------------------|------------------------|--------------------------------------------------------------------|
| AGENT_ENDPOINT_URL   | Databricks Agent REST URL | https://adb-xxxx.azuredatabricks.net/serving-endpoints/hr-agent/invocations |
| VECTOR_SEARCH_INDEX  | 사용 인덱스명              | koreanair_docs_index                                                |
| CATALOG_NAME         | UC 카탈로그명             | koreanair_corp                                                     |
| SCHEMA_NAME          | UC 스키마명              | hr_docs                                                           |
| VOLUME_NAME          | 업로드용 볼륨명            | uploads                                                           |
| SESSION_TIMEOUT_MINUTES | 세션 만료 시간            | 60                                                                |
| MAX_HISTORY_TURNS    | 유지할 대화 턴 수          | 5                                                                 |
| ALLOWED_FILE_TYPES   | 허용 파일 형식             | ["pdf", "docx", "pptx", "txt"]                                   |
| MAX_UPLOAD_MB        | 최대 파일 크기             | 10                                                                |

---

## 4. 간단한 시퀀스 흐름

```mermaid
sequenceDiagram
    participant User
    participant Flask_App
    participant Databricks_Agent
    participant Vector_Search
    participant Volume

    User->>Flask_App: 질의 입력
    Flask_App->>Databricks_Agent: {query, history, uploaded_files}
    Databricks_Agent->>Vector_Search: 문서 검색 (Top-K)
    Vector_Search-->>Databricks_Agent: 관련 문서 chunk 반환
    Databricks_Agent-->>Flask_App: {answer, citations}
    Flask_App-->>User: 답변 + 근거 문서 표시

    User->>Flask_App: 파일 업로드
    Flask_App->>Volume: 파일 저장 (/Volumes/.../uploads/)
    Volume-->>Flask_App: 저장 완료
```

---

## 5. 보안 및 권한
- 앱 접근은 사내망 또는 인증된 사용자만 허용 (SSO 기반)
- 파일 접근 및 RAG 검색 범위는 Unity Catalog 권한 체계 준수
- 외부 API 호출 없이 Databricks 내부 LLM 및 인덱스만 사용

---